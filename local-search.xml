<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>鸿蒙系统中登录页自动填充 bug 导致的 input 背景色覆盖</title>
    <link href="/2025/07/08/harmonyos-autofill-bug/"/>
    <url>/2025/07/08/harmonyos-autofill-bug/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>当在鸿蒙系统中，当检测到页面中的 <code>input</code> 且 <code>type=&quot;password&quot;</code> 的元素时，会在聚焦此元素或其前一个 <code>input</code> 元素时，异常触发自动填充，导致这两个 <code>input</code> 元素的背景色被覆盖。</p><p><img src="/img/harmonyos-autofill-bug.jpg" alt="鸿蒙自动填充问题示例"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>全局添加以下样式，隐藏自动填充时的背景色：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">input</span>:-webkit-autofill &#123;<br>  -webkit-<span class="hljs-attribute">background-clip</span>: text;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>鸿蒙系统中微信网页 JS-SDK 由 iframe 导致 invalid signature 和 permission denied 报错</title>
    <link href="/2025/06/25/harmonyos-wechat-iframe-bug/"/>
    <url>/2025/06/25/harmonyos-wechat-iframe-bug/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>当在鸿蒙系统中使用微信网页 JS-SDK 时，如果页面中存在 iframe，且 iframe 加载与当前页面不同的 url，会导致微信 JS-SDK 报错 <code>invalid signature</code> 或 <code>permission denied</code>。</p><p>此问题的根源在于<strong>鸿蒙微信的 bug</strong>，已向官方反馈问题，<a href="https://developers.weixin.qq.com/community/develop/doc/000c480314c5f0b8368360ed161400?highLine=%25E9%25B8%25BF%25E8%2592%2599%25E9%2580%2582%25E9%2585%258D">详见</a>。</p><h2 id="临时解决方案"><a href="#临时解决方案" class="headerlink" title="临时解决方案"></a>临时解决方案</h2><p>通过分析问题的成因，可以发现微信 JS-SDK 的签名验证依赖于当前页面的 url，而在鸿蒙系统微信获取的当前页面 url 会因为 iframe 的加载而改变，导致签名验证失败。故我们可以<strong>在调用失败后插入一个与当前页面 url 相同的 iframe 来欺骗微信</strong> 🤡。</p><h3 id="1-劫持微信-JS-SDK-的调用"><a href="#1-劫持微信-JS-SDK-的调用" class="headerlink" title="1. 劫持微信 JS-SDK 的调用"></a>1. 劫持微信 JS-SDK 的调用</h3><p>通过 <code>navigator.userAgent</code> 是否同时包含 <code>&#39;ArkWeb&#39;</code> 和 <code>MicroMessenger&#39;</code> 判断当前网页应用的运行环境是否为鸿蒙微信。</p><p>如果是鸿蒙微信，那么在引入微信 JS-SDK 后，添加下面的代码劫持微信 JS-SDK 的调用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/*</span><br><span class="hljs-comment">  hack: https://developers.weixin.qq.com/community/develop/doc/000c480314c5f0b8368360ed161400?highLine=%25E9%25B8%25BF%25E8%2592%2599%25E9%2580%2582%25E9%2585%258D</span><br><span class="hljs-comment">  纯血鸿蒙微信存在 bug， iframe 加载与当前 url 不同的页面会影响签名校验</span><br><span class="hljs-comment">  这里通过在调用失败后插入一个与当前 url 相同的 iframe 来欺骗微信</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 这里只列出了部分 api，实际项目中请根据需要修改，此列表可直接在 JS-SDK 初始化时传给 jsApiList 配置项</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">ENABLED_WECHAT_JSSDK_API_LIST</span> = [<br>  <span class="hljs-string">&#x27;getLocation&#x27;</span>,<br>  <span class="hljs-string">&#x27;onMenuShareAppMessage&#x27;</span>,<br>  <span class="hljs-string">&#x27;onMenuShareQQ&#x27;</span>,<br>  <span class="hljs-string">&#x27;chooseImage&#x27;</span>,<br>  <span class="hljs-string">&#x27;uploadImage&#x27;</span>,<br>  <span class="hljs-string">&#x27;previewImage&#x27;</span>,<br>  <span class="hljs-string">&#x27;hideOptionMenu&#x27;</span>,<br>  <span class="hljs-string">&#x27;showOptionMenu&#x27;</span>,<br>  <span class="hljs-string">&#x27;hideMenuItems&#x27;</span>,<br>  <span class="hljs-string">&#x27;showMenuItems&#x27;</span>,<br>  <span class="hljs-string">&#x27;hideAllNonBaseMenuItem&#x27;</span>,<br>  <span class="hljs-string">&#x27;showAllNonBaseMenuItem&#x27;</span>,<br>  <span class="hljs-string">&#x27;scanQRCode&#x27;</span>,<br>]<br><br><span class="hljs-keyword">const</span> _wx = <span class="hljs-variable language_">window</span>.<span class="hljs-property">wx</span><br><br><span class="hljs-comment">// 标记 hack 后重试调用</span><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HACK_RETRY_CALL_TAG</span> = <span class="hljs-title class_">Symbol</span>()<br><span class="hljs-comment">// 处理并发调用，插入 hack iframe 时让后续调用等待</span><br><span class="hljs-keyword">let</span> hackPending<br><span class="hljs-keyword">let</span> hackPendingResolve<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hackWechat</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> iframe = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;iframe&#x27;</span>)<br>    <span class="hljs-comment">// #hack-wechat-harmonyos 用于标记为 hack iframe 加载，提前停止解析避免资源浪费</span><br>    iframe.<span class="hljs-property">src</span> =<br>      <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;#&#x27;</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;#hack-wechat-harmonyos&#x27;</span><br>    iframe.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&#x27;none&#x27;</span><br><br>    <span class="hljs-comment">// 不能使用 iframe.onload 事件来判断 iframe 加载完成，因为页面中会通过 window.stop() 阻止后续解析</span><br>    <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-keyword">function</span> <span class="hljs-title function_">handler</span>(<span class="hljs-params">event</span>) &#123;<br>      <span class="hljs-keyword">if</span> (event.<span class="hljs-property">data</span>?.<span class="hljs-property">type</span> !== <span class="hljs-string">&#x27;hackWechatHarmonyosReady&#x27;</span>) <span class="hljs-keyword">return</span><br><br>      iframe.<span class="hljs-title function_">remove</span>()<br>      <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, handler)<br>      <span class="hljs-comment">// 直接调用大概率失败，延迟一下</span><br>      <span class="hljs-built_in">setTimeout</span>(resolve, <span class="hljs-number">10</span>)<br>    &#125;)<br><br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">append</span>(iframe)<br>  &#125;)<br>&#125;<br><br><span class="hljs-variable language_">window</span>.<span class="hljs-property">wx</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(<br>  &#123;&#125;,<br>  &#123;<br>    <span class="hljs-title function_">get</span>(<span class="hljs-params">_, prop, receiver</span>) &#123;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-variable constant_">ENABLED_WECHAT_JSSDK_API_LIST</span>.<span class="hljs-title function_">includes</span>(prop)) &#123;<br>        <span class="hljs-keyword">return</span> _wx[prop]<br>      &#125;<br><br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">async</span> (options) =&gt; &#123;<br>        options ??= &#123;&#125;<br><br>        <span class="hljs-comment">// 等待 hack 完成，放过 hack 后重试调用</span><br>        <span class="hljs-keyword">if</span> (!options[<span class="hljs-variable constant_">HACK_RETRY_CALL_TAG</span>]) &#123;<br>          <span class="hljs-keyword">await</span> hackPending<br>        &#125;<br><br>        <span class="hljs-keyword">const</span> hackOptions = &#123;<br>          ...options,<br>          <span class="hljs-title function_">success</span>(<span class="hljs-params">...args</span>) &#123;<br>            <span class="hljs-comment">// 重试调用成功后放行</span><br>            <span class="hljs-keyword">if</span> (options[<span class="hljs-variable constant_">HACK_RETRY_CALL_TAG</span>]) &#123;<br>              hackPending = <span class="hljs-literal">null</span><br>              hackPendingResolve?.()<br>            &#125;<br>            options.<span class="hljs-property">success</span>?.(...args)<br>          &#125;,<br>          <span class="hljs-keyword">async</span> <span class="hljs-title function_">fail</span>(<span class="hljs-params">...args</span>) &#123;<br>            <span class="hljs-keyword">const</span> errMsg = args[<span class="hljs-number">0</span>]?.<span class="hljs-property">errMsg</span><br>            <span class="hljs-keyword">if</span> (<br>              !errMsg.<span class="hljs-title function_">endsWith</span>(<span class="hljs-string">&#x27;:fail invalid signature&#x27;</span>) &amp;&amp;<br>              !errMsg.<span class="hljs-title function_">endsWith</span>(<span class="hljs-string">&#x27;:permission denied&#x27;</span>)<br>            ) &#123;<br>              options.<span class="hljs-property">fail</span>?.(...args)<br>              <span class="hljs-keyword">return</span><br>            &#125;<br><br>            <span class="hljs-comment">// 等待 hack 完成，放过 hack 后重试调用</span><br>            <span class="hljs-keyword">if</span> (hackPending &amp;&amp; !options[<span class="hljs-variable constant_">HACK_RETRY_CALL_TAG</span>]) &#123;<br>              <span class="hljs-keyword">await</span> hackPending<br>              receiver[prop](options)<br>              <span class="hljs-keyword">return</span><br>            &#125;<br><br>            hackPending = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>              hackPendingResolve = resolve<br>            &#125;)<br><br>            <span class="hljs-keyword">await</span> <span class="hljs-title function_">hackWechat</span>()<br>            receiver[prop](&#123;<br>              ...options,<br>              [<span class="hljs-variable constant_">HACK_RETRY_CALL_TAG</span>]: <span class="hljs-literal">true</span>,<br>            &#125;)<br>          &#125;,<br>        &#125;<br><br>        _wx[prop](hackOptions)<br>      &#125;<br>    &#125;,<br>  &#125;,<br>)<br></code></pre></td></tr></table></figure><p><em><strong>⚠️ 当前代码未设置最大重试次数，可能会陷入死循环（遇到非 bug 导致的 fail），如有需要可自行添加</strong></em></p><h3 id="2-减少插入额外-iframe-导致的性能开销"><a href="#2-减少插入额外-iframe-导致的性能开销" class="headerlink" title="2. 减少插入额外 iframe 导致的性能开销"></a>2. 减少插入额外 iframe 导致的性能开销</h3><p>插入与当前页面 url 相同的 iframe 会导致额外的性能开销及资源浪费，那么我们怎么能将其影响降到最低呢？以我实际项目为例：</p><h4 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h4><p>项目为使用 <code>Vue</code> 开发的单页应用，所有的 url 都会通过 <code>index.html</code> 来处理。</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>在 <code>index.html</code> 中添加如下代码，当检测到当前页面是 hack iframe 时（通过判断 <code>hash</code> 是否为 <code>#hack-wechat-harmonyos</code>），使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/stop">window.stop()</a> 停止后续解析并通过 <code>postMessage</code> 通知父窗口已准备就绪。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">parent</span> !== <span class="hljs-variable language_">window</span> &amp;&amp; location.<span class="hljs-property">hash</span> === <span class="hljs-string">&#x27;#hack-wechat-harmonyos&#x27;</span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">stop</span>();</span><br><span class="language-javascript">      <span class="hljs-variable language_">window</span>.<span class="hljs-property">parent</span>.<span class="hljs-title function_">postMessage</span>(&#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;hackWechatHarmonyosReady&#x27;</span> &#125;, <span class="hljs-string">&#x27;*&#x27;</span>);</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>  ...<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>鸿蒙</tag>
      
      <tag>微信</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/06/25/hello-world/"/>
    <url>/2025/06/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
